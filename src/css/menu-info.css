/* Define size variables for button groups */
:root {
    --size-upper-buttons: clamp(30px, 5vmin, 80px); /* Upper part (info, radio group) */
    --size-middle-buttons: clamp(40px, 6vmin, 100px); /* Middle part (circles) */
    --size-lower-buttons: clamp(50px, 7vmin, 120px); /* Lower part (play, balance, regen) */
    --col1: white; /* Default color */
    --col2: rgba(0, 0, 0, 0.613); /* Hover and active color */
    --col2-light: rgba(255, 255, 255, 0.3); /* Expanded state color */
}

/* Reset general */
html, body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: black !important;
    height: 100%;
    font-family: 'Inter', sans-serif;
}

/* Toggle Button */
button.menu-info-toggle {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--size-upper-buttons);
    height: var(--size-upper-buttons);
    cursor: pointer;
    background-color: transparent;
    border: 2px solid var(--col1);
    border-radius: 10%;
    font-size: calc(var(--size-upper-buttons) / 3);
    pointer-events: auto;
    color: var(--col1);
    transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

button.menu-info-toggle::after {
    content: "i";
    display: inline-block;
    font-size: calc(var(--size-upper-buttons) / 2.5);
    transition: transform 0.3s ease, color 0.3s ease;
    color: inherit;
}

button.menu-info-toggle:hover {
    transform: scale(1.1);
    border-color: var(--col2);
    color: var(--col2);
}

button.menu-info-toggle[aria-expanded="true"] {
    background-color: var(--col2-light);
    border-color: var(--col2);
    color: var(--col2);
}

button.menu-info-toggle[aria-expanded="true"]::after {
    transform: rotate(180deg);
}

button.menu-info-toggle[aria-expanded="false"] {
    background-color: transparent;
    border-color: var(--col1);
    color: var(--col1);
}

button.menu-info-toggle[aria-expanded="false"]::after {
    transform: rotate(0deg);
}

.menu-info-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--size-upper-buttons);
    height: var(--size-upper-buttons);
    cursor: pointer;
    transition: transform 0.3s ease, color 0.3s ease;
    color: var(--col1);
    pointer-events: auto;
}

.menu-info-icon:hover {
    color: var(--col2);
}

/* Button group vertical layout */
.btn-group-vertical {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem; /* Space between buttons */
    width: 100%; /* Full width of the container */
    max-width: var(--size-upper-buttons); /* Restrict to the same width as heading */
}

/* Button styles when linked with checkboxes/radios */
.btn-check + .btn {
    width: var(--size-upper-buttons); /* Equal width and height for square buttons */
    height: var(--size-upper-buttons); /* Square buttons */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
    font-size: calc(var(--size-upper-buttons) / 3); /* Icon scales proportionally */
    overflow: hidden; /* Prevent content overflow */
    transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease;
    border-radius: 10%; /* Rounded edges */
    padding: 0; /* Ensure no extra padding */
}

/* Remove focus outline and shadow */
.btn-check:focus + .btn {
    outline: none;
    box-shadow: none;
    background-color: rgba(255, 105, 105, 0.1); /* Optional: Subtle background change */

}

/* Default button styles */
.btn-outline-primary {
    background-color: rgba(0, 0, 0, 0);
    border-color: var(--col1);
    color: var(--col1);
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
    width: var(--size-upper-buttons); /* Ensure buttons remain square */
    height: var(--size-upper-buttons);
    --bs-btn-active-bg: var(--col1);
    --bs-btn-active-border-color: var(--col1);
    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
    --bs-btn-active-color: var(--col2);

}

/* Hover state */
.btn-check:hover + .btn-outline-primary,
.btn-outline-primary:hover {
    background-color: rgba(0, 0, 0, 0); /* Keep transparent background */
    border-color: var(--col2); /* Highlight border */
    color: var(--col2); /* Change text/icon color */
}

/* Focus state */
.btn-check:focus + .btn-outline-primary {
    border: 2px solid var(--col2); /* Highlight border on focus */
    background-color: rgba(255, 105, 105, 0.1); /* Optional: Subtle background change */

}

/* Checked state */
.btn-check:checked + .btn-outline-primary {
    background-color: rgba(255, 0, 0, 0); /* Transparent background */
    border-color: var(--col1); /* Default border color */
    color: var(--col2); /* Highlight color */
}

/* Icon container adjustments for btn-outline-primary */
.btn-outline-primary svg {
    width: 80%; /* Ensure icon scales proportionally within the button */
    height: 80%; /* Maintain aspect ratio */
    object-fit: contain; /* Prevent icon distortion */
}

/* Match button group width to heading */
h1.responsive-title {
    font-family: 'Inter Display', sans-serif;
    font-weight: 150;
    font-size: 4vw; /* Dynamic scaling */
    color: var(--col2);
    margin: 0;
    text-align: center;
}

/* Ensure vertical alignment of button group and heading */
.btn-group-vertical-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%; /* Full width */
    max-width: var(--size-upper-buttons); /* Match width to heading */
}

/* Middle Part Buttons (Circles) */
.action-button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--size-middle-buttons);
    height: var(--size-middle-buttons);
    font-size: calc(var(--size-middle-buttons) / 2.5);
    color: var(--col1);
    background-color: transparent;
    border: 2px solid var(--col1);
    transition: transform 0.3s ease, color 0.3s ease;
    pointer-events: auto;
    border-radius: 50%;
}

.action-button:hover {
    color: var(--col2);
    transform: scale(1.1);
}

/* Lower Part Buttons (Play, Balance, Regen) */
.toggle-play-pause,
.balance-button,
.regen-button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--size-lower-buttons);
    height: var(--size-lower-buttons);
    font-size: calc(var(--size-lower-buttons) / 2.5);
    color: var(--col1);
    background-color: transparent;
    border: 2px solid var(--col1);
    transition: transform 0.3s ease, color 0.3s ease;
    pointer-events: auto;
    border-radius: 50%;
}

.toggle-play-pause:hover,
.balance-button:hover,
.regen-button:hover {
    color: var(--col2);
    transform: scale(1.1);
}

/* Placeholder Styles for Items in the Grid */
.grid-content div {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    background-color: var(--col1-light);
    font-family: 'Inter Display', sans-serif;
    font-weight: 200;
    font-size: clamp(12px, 2vw, 32px);
    padding: clamp(5px, .5vw, 15px);
    text-align: left;
    color: var(--col1);
    border-radius: 0.5vw;
    white-space: normal;
    overflow-wrap: break-word;
    transition: transform 0.3s ease, color 0.3s ease;
    box-sizing: border-box;
    height: 100%;
}

/* Main Grid Layout */
.grid-content {
    display: grid;
    grid-template-columns: minmax(min-content, clamp(150px, 30%, 300px)) 1fr;
    grid-auto-rows: auto;
    gap: clamp(0.5em, 1.0vmin, 3vw) 1vw;
    align-items: start;
}

/* Grid container for layout */
.container-grid {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 2vw;
    align-items: start;
}

/* Vertical Spacing and Row Control */
.container.text-center {
    display: flex;
    flex-direction: column;
    gap: 4vmin;
}

.row {
    min-height: clamp(50px, 8vmin, 100px);
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}


