/* General resets */

/*
    • 2D UI Elements:
    • Only UI elements (buttons, sliders, etc.) should receive pointer events.
    • Positioned to avoid obstructing interactions with the 3D scene.
    • 3D Scene:
    • Receives all pointer events when clicking outside the UI elements.
    • OrbitControls and other interactions function without interference.
*/

@import "fonts.css";
@import "menu-info.css";
@import "action-gui.css";

/* Color Variables */
:root {
    --col1: rgb(255, 255, 255); /* Default color */
    --col2: rgba(108, 108, 108, 0.478);  /* Hover and active color */
    --col3: #000000; 
    --col4: #ffffff00; 

}

/* Reset general */
html, body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: black !important;
    height: 100%;
    font-family: 'SpaceMono', sans-serif;
}

webaudio-knob, webaudio-param, webaudio-slider, webaudio-switch, webaudio-numeric-keyboard {
    pointer-events: auto;
  }

webaudioctrl-context-menu {
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: black !important;
    height: 100%;
    font-family: 'SpaceMono', sans-serif;
    
}
  
webaudio-slider {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
  }


.modal {
    z-index: 1050; /* Ensure it overlays other elements */
  }
  
  .modal-backdrop {
    z-index: 1040; /* Correct layering for the backdrop */
  }
  
  .modal-content {
    overflow: visible;
  }
  
  .modal-dialog {
    max-width: 400px; /* Adjust width to fit the keyboard */
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
    pointer-events: auto;
  }
  .numeric-keyboard .button {
    pointer-events: auto; /* Ensure buttons are clickable */
  }
  webaudio-numeric-keyboard {
    display: block;
    width: 100%;
  }

  #numericKeyboardModal {
    position: fixed !important;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    z-index: 1050 !important;
}


/* Square Frame: Centered and fixed size */
/* Responsive Frame: Centered and flexible size */
.ratio-frame {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%; /* Take full width of the window */
    height: 100%; /* Take full height of the window */
    min-width: 340px; /* Ensure minimum width */
    min-height: 320px; /* Ensure minimum height */
    max-width: 100vw; /* Restrict to window width */
    max-height: 100vh; /* Restrict to window height */
    background-color: #000; /* Optional for debugging */
    overflow: hidden;
    box-sizing: border-box; /* Prevent padding/borders affecting size */
}

/* Base canvas styling */
canvas {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
}

/* Three.js canvas styling */
#canvas3D {
    width: 100%;
    height: 100%;
    z-index: 1;
    background: transparent;
    pointer-events: auto; /* Ensure 3D interactions */
}

/* UI overlay: Positioned over the canvas */
.ui-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none; /* Pass events through except for interactive elements */
}
.sub-frame {
    position: relative; /* Necessary for absolute positioning of child elements */
    top: 4%;
    left: 4%;
    width: 92%;
    height: 92%;
    border: 1.5px solid var(--col1);
    border-radius: 5px;
    display: flex;
    flex-direction: column; /* Ensures vertical stacking */
    box-sizing: border-box;
    background: none;
    padding: 1vw 1vw;
    overflow: visible; /* Ensure the menu is not clipped */
    z-index: 1; /* Keep it above the canvas */

}
.action-gui-container {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    margin-top: auto; /* Keeps the container at the bottom of the sub-frame */
    /* Additional styling as needed */
}

.action-gui-container .container {
    width: 100%;
    /* Optional: Add padding or margin if needed */
}

.action-gui-container .row {
    width: 100%;
    /* Optional: Add spacing between rows if needed */
}

.action-gui-container .col-2, 
.action-gui-container .col-4 {
    /* Center content vertically and horizontally */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.action-gui-container .btn {
    margin: 5px 0; /* Adjust spacing between buttons */
    /* Optional: Customize button sizes, colors, etc. */
}

.action-gui-container webaudio-knob,
.action-gui-container webaudio-param {
    margin: 5px 0; /* Adjust spacing between controls */
    /* Optional: Set sizes or other properties */
}

.mid-container {
    position: relative;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin-top: auto;
    height: 100%;
    z-index: 1;
  }
  
  .mid-container .col-1 {
    position: absolute;
    top: 50%;
    height: 80%;
    width: 5%;

    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    z-index: 10;
  }
  


button, .btn {
    outline: none; /* Remove browser default focus outline */
    box-shadow: none; /* Prevent any default box shadows */
    background: none; /* Ensure transparent background */
    border: none; /* Prevent default borders */
    padding: 0; /* Reset padding */
    margin: 0; /* Reset margin */
    appearance: none; /* Normalize button appearance across browsers */
  }
  