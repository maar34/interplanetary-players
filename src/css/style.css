/* Charles Bukowski Style is the answer to everything
"Not many have style
Not many can keep style
I have seen dogs with more style than men,
although not many dogs have style.
Cats have it with abundance."*/

/*
    • 2D UI Elements:
    • Only UI elements (buttons, sliders, etc.) should receive pointer events.
    • Positioned to avoid obstructing interactions with the 3D scene.
    • 3D Scene:
    • Receives all pointer events when clicking outside the UI elements.
    • OrbitControls and other interactions function without interference.
*/

@import "fonts.css";
@import "menu-info.css";
@import "action-gui.css";
@import "modals.css";

/* Color Variables */
:root {
    --color1: rgb(255, 255, 255); /* Default color */
    --color2: rgb(0, 0, 0);  /* Hover and active color */
    --color3: #000000; 
    --color4: #ffffff00; 
    --highlight-color: #02ff02;
    --mapped-color: #9aff9a;

}
*{
margin:0; 
padding:0;
}
/* Reset general */
html, body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: black !important;
    height: 100%;
    font-family: 'SpaceMono', sans-serif;
}


webaudio-slider {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
  }


/* Default state: Widgets are interactive */
webaudio-knob,
webaudio-param,
webaudio-slider,
webaudio-switch,
webaudio-numeric-keyboard {
  pointer-events: auto;
}

/* MIDI Learn mode: Disable pointer events on widgets */
.midi-learn-mode webaudio-knob,
.midi-learn-mode webaudio-param,
.midi-learn-mode webaudio-slider,
.midi-learn-mode webaudio-switch,
.midi-learn-mode webaudio-numeric-keyboard {
  pointer-events: none;
}

/* Overlay element */
.widget-overlay {
  background-color: rgba(0, 0, 0, 0); /* Fully transparent */
  pointer-events: auto;
  border: 2px solid var(--highlight-color, orange); /* Optional border for debugging */
}

/* Initially hide the context menu */
#midi-context-menu {
  display: none;
  /* Additional styling as needed */
}


/* Highlight automatable elements during MIDI Learn mode */
.midi-learn-highlight {
  border: 2px solid var(--highlight-color, orange);
  box-shadow: 0 0 10px rgba(159, 159, 159, 0.5);
}

/* Highlight automatable elements during MIDI Learn mode 
.midi-learn-mapped {
  border: 2px solid var(--mapped-color, rgb(255, 218, 149));
  box-shadow: 0 0 10px rgba(159, 159, 159, 0.5);
}*/
/* Optional: Change cursor to indicate interactivity */
[data-automatable="true"]:hover {
  cursor: pointer;
}

/* Ensure the Bootstrap dropdown menu appears above overlays */
#midi-context-menu.show {
  display: block;

  z-index: 1050; /* Higher than overlays */
}

/* Highlight for dropdown items in MIDI Learn mode */
.midi-learn-dropdown {
  border: 2px solid var(--highlight-color, orange);
  background-color: rgba(240, 240, 240, 0.954);
  cursor: pointer;
}

.midi-learn-dropdown:hover {
  background-color: rgb(141, 244, 255);
}
/* Apply styles to mapped elements only in MIDI Learn mode */
/* .midi-learn-mode .midi-mapped {
  border: 2px solid rgb(255, 0, 0);
}

.midi-learn-mapped {
  border: 2px solid var(--mapped-color, rgb(255, 218, 149));
  box-shadow: 0 0 10px rgba(159, 159, 159, 0.5);
}
 */
.midi-indicator {
  display: none;
  position: fixed;
  background-color: var(--highlight-color, orange);
  color: #000000;
  padding: 2px 4px;
  border-radius: 3px;
  font-size: 10px;
  font-family: 'SpaceMono', sans-serif;
  z-index: 1002;
}

.midi-learn-mode .midi-indicator {
  display: block;
}


/* Square Frame: Centered and fixed size */
/* Responsive Frame: Centered and flexible size */
.ratio-frame {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%; /* Take full width of the window */
    height: 100%; /* Take full height of the window */
    min-width: 220px; /* Ensure minimum width */
    min-height: 220px; /* Ensure minimum height */
    max-width: 100%; /* Restrict to window width */
    max-height: 100%; /* Restrict to window height */
    background-color: #000; /* Optional for debugging */
    overflow: hidden;
    box-sizing: border-box; /* Prevent padding/borders affecting size */
}

/* Base canvas styling */
canvas {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
}

/* Three.js canvas styling */
#canvas3D {
    width: 100%;
    height: 100%;
    z-index: 1;
    background: transparent;
    pointer-events: auto; /* Ensure 3D interactions */
}

/* UI overlay: Positioned over the canvas */
.ui-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none; /* Pass events through except for interactive elements */
}
.sub-frame {
    position: relative; /* Necessary for absolute positioning of child elements */
    top: 4%;
    left: 4%;
    width: 92%;
    height: 92%;
    border: 1.5px solid var(--color1);
    border-radius: 5px;
    display: flex;
    flex-direction: column; /* Ensures vertical stacking */
    box-sizing: border-box;
    background: none;
    padding: 1% 1%;
    overflow: visible; /* Ensure the menu is not clipped */
    z-index: 1; /* Keep it above the canvas */

}



.mid-container {
    position: relative;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin-top: auto;
    height: 100%;
    z-index: 1;
  }
  
  .mid-container .col-1 {
    position: absolute;
    top: 50%;
    height: 40vh;
    width: 12vw;

    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    z-index: 10;
  }
  


button, .btn {
    outline: none; /* Remove browser default focus outline */
    box-shadow: none; /* Prevent any default box shadows */
    background: none; /* Ensure transparent background */
    border: none; /* Prevent default borders */
    padding: 0; /* Reset padding */
    margin: 0; /* Reset margin */
    appearance: none; /* Normalize button appearance across browsers */
  }
  
  .btn-primary {
    --bs-btn-color: #000000;
    --bs-btn-bg: #000000;
    --bs-btn-border-color: #0d6efd;
    --bs-btn-hover-color: #fff;
    --bs-btn-hover-bg: #000000;
    --bs-btn-hover-border-color: #000000;
    --bs-btn-focus-shadow-rgb: 49, 132, 253;
    --bs-btn-active-color: #ffffff;
    --bs-btn-active-bg: #000000;
    --bs-btn-active-border-color: #0a53be;
    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
    --bs-btn-disabled-color: #000000;
}


/* Notifications Container */
#notification-container {
  position: fixed;
  bottom: 20px; /* Adjust as needed */
  left: 50%;
  transform: translateX(-50%);
  z-index: 1052; /* Ensure it's above other elements */
  display: flex;
  flex-direction: column;
  align-items: center; /* Centers toasts horizontally */
  justify-content: center; 
  gap: 10px; /* Spacing between notifications */
  pointer-events: none; /* Allow interactions to pass through */
}

/* Toast Styling */
.notification-toast {
  font-family: 'SpaceMono', sans-serif;
  position: relative;
  background-color: #000000;
  color: #fff;
  z-index: 1052;
  padding: 10px 20px;
  border-radius: 5px;
  font-size: 0.8rem;
  opacity: 0.9;
  animation: fade-in 0.3s ease;
  pointer-events: auto; /* Allow interaction with the close button */
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3); /* Add shadow for better visibility */
  
  /* Center the text inside the toast */
  text-align: center;
}

/* Animations for Toasts */
@keyframes fade-in {
  from {
      opacity: 0;
      transform: translateY(-20px);
  }
  to {
      opacity: 1;
      transform: translateY(0);
  }
}

@keyframes fade-out {
  from {
      opacity: 1;
      transform: translateY(0);
  }
  to {
      opacity: 0;
      transform: translateY(-20px);
  }
}

/* Toast Variants */
.notification-toast-success {
    background-color: #28a745;
}

.notification-toast-error {
    background-color: #dc3545;
}

.notification-toast-info {
    background-color: #17a2b8;
}

/* Fade-out class */
.fade-out {
    animation: fade-out 0.3s ease forwards;
}
